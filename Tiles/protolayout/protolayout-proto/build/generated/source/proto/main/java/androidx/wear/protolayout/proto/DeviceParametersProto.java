// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: device_parameters.proto

package androidx.wear.protolayout.proto;

public final class DeviceParametersProto {
  private DeviceParametersProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   * The platform of the device requesting a layout.
   * </pre>
   *
   * Protobuf enum {@code androidx.wear.protolayout.proto.DevicePlatform}
   */
  public enum DevicePlatform
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Device platform is undefined.
     * </pre>
     *
     * <code>DEVICE_PLATFORM_UNDEFINED = 0;</code>
     */
    DEVICE_PLATFORM_UNDEFINED(0),
    /**
     * <pre>
     * Device is a Wear OS device.
     * </pre>
     *
     * <code>DEVICE_PLATFORM_WEAR_OS = 1;</code>
     */
    DEVICE_PLATFORM_WEAR_OS(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Device platform is undefined.
     * </pre>
     *
     * <code>DEVICE_PLATFORM_UNDEFINED = 0;</code>
     */
    public static final int DEVICE_PLATFORM_UNDEFINED_VALUE = 0;
    /**
     * <pre>
     * Device is a Wear OS device.
     * </pre>
     *
     * <code>DEVICE_PLATFORM_WEAR_OS = 1;</code>
     */
    public static final int DEVICE_PLATFORM_WEAR_OS_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DevicePlatform valueOf(int value) {
      return forNumber(value);
    }

    public static DevicePlatform forNumber(int value) {
      switch (value) {
        case 0: return DEVICE_PLATFORM_UNDEFINED;
        case 1: return DEVICE_PLATFORM_WEAR_OS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DevicePlatform>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DevicePlatform> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DevicePlatform>() {
            @java.lang.Override
            public DevicePlatform findValueByNumber(int number) {
              return DevicePlatform.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return DevicePlatformVerifier.INSTANCE;
    }

    private static final class DevicePlatformVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new DevicePlatformVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return DevicePlatform.forNumber(number) != null;
            }
          };

    private final int value;

    private DevicePlatform(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:androidx.wear.protolayout.proto.DevicePlatform)
  }

  /**
   * <pre>
   * The shape of a screen.
   * </pre>
   *
   * Protobuf enum {@code androidx.wear.protolayout.proto.ScreenShape}
   */
  public enum ScreenShape
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Screen shape is undefined.
     * </pre>
     *
     * <code>SCREEN_SHAPE_UNDEFINED = 0;</code>
     */
    SCREEN_SHAPE_UNDEFINED(0),
    /**
     * <pre>
     * A round screen (typically found on most Wear devices).
     * </pre>
     *
     * <code>SCREEN_SHAPE_ROUND = 1;</code>
     */
    SCREEN_SHAPE_ROUND(1),
    /**
     * <pre>
     * Rectangular screens.
     * </pre>
     *
     * <code>SCREEN_SHAPE_RECT = 2;</code>
     */
    SCREEN_SHAPE_RECT(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Screen shape is undefined.
     * </pre>
     *
     * <code>SCREEN_SHAPE_UNDEFINED = 0;</code>
     */
    public static final int SCREEN_SHAPE_UNDEFINED_VALUE = 0;
    /**
     * <pre>
     * A round screen (typically found on most Wear devices).
     * </pre>
     *
     * <code>SCREEN_SHAPE_ROUND = 1;</code>
     */
    public static final int SCREEN_SHAPE_ROUND_VALUE = 1;
    /**
     * <pre>
     * Rectangular screens.
     * </pre>
     *
     * <code>SCREEN_SHAPE_RECT = 2;</code>
     */
    public static final int SCREEN_SHAPE_RECT_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ScreenShape valueOf(int value) {
      return forNumber(value);
    }

    public static ScreenShape forNumber(int value) {
      switch (value) {
        case 0: return SCREEN_SHAPE_UNDEFINED;
        case 1: return SCREEN_SHAPE_ROUND;
        case 2: return SCREEN_SHAPE_RECT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ScreenShape>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ScreenShape> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ScreenShape>() {
            @java.lang.Override
            public ScreenShape findValueByNumber(int number) {
              return ScreenShape.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ScreenShapeVerifier.INSTANCE;
    }

    private static final class ScreenShapeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ScreenShapeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return ScreenShape.forNumber(number) != null;
            }
          };

    private final int value;

    private ScreenShape(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:androidx.wear.protolayout.proto.ScreenShape)
  }

  public interface DeviceParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:androidx.wear.protolayout.proto.DeviceParameters)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Width of the device's screen in DP.
     * </pre>
     *
     * <code>uint32 screen_width_dp = 1;</code>
     * @return The screenWidthDp.
     */
    int getScreenWidthDp();

    /**
     * <pre>
     * Height of the device's screen in DP.
     * </pre>
     *
     * <code>uint32 screen_height_dp = 2;</code>
     * @return The screenHeightDp.
     */
    int getScreenHeightDp();

    /**
     * <pre>
     * Density of the display. This value is the scaling factor to get from DP to
     * Pixels (px = dp * density).
     * </pre>
     *
     * <code>float screen_density = 3;</code>
     * @return The screenDensity.
     */
    float getScreenDensity();

    /**
     * <pre>
     * Current user preference for the scaling factor for fonts displayed on the
     * display. This value is used to get from SP to DP (dp = sp * font_scale).
     * </pre>
     *
     * <code>float font_scale = 7;</code>
     * @return The fontScale.
     */
    float getFontScale();

    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
     * @return The enum numeric value on the wire for devicePlatform.
     */
    int getDevicePlatformValue();
    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
     * @return The devicePlatform.
     */
    androidx.wear.protolayout.proto.DeviceParametersProto.DevicePlatform getDevicePlatform();

    /**
     * <pre>
     * The shape of the device's screen
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
     * @return The enum numeric value on the wire for screenShape.
     */
    int getScreenShapeValue();
    /**
     * <pre>
     * The shape of the device's screen
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
     * @return The screenShape.
     */
    androidx.wear.protolayout.proto.DeviceParametersProto.ScreenShape getScreenShape();

    /**
     * <pre>
     * The maximum schema version supported by the current renderer.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
     * @return Whether the rendererSchemaVersion field is set.
     */
    boolean hasRendererSchemaVersion();
    /**
     * <pre>
     * The maximum schema version supported by the current renderer.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
     * @return The rendererSchemaVersion.
     */
    androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo getRendererSchemaVersion();

    /**
     * <pre>
     * Renderer supported capabilities
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
     * @return Whether the capabilities field is set.
     */
    boolean hasCapabilities();
    /**
     * <pre>
     * Renderer supported capabilities
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
     * @return The capabilities.
     */
    androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities getCapabilities();
  }
  /**
   * <pre>
   * Parameters describing the device requesting a layout update. This contains
   * physical and logical characteristics about the device (e.g. screen size and
   * density, etc).
   * </pre>
   *
   * Protobuf type {@code androidx.wear.protolayout.proto.DeviceParameters}
   */
  public  static final class DeviceParameters extends
      com.google.protobuf.GeneratedMessageLite<
          DeviceParameters, DeviceParameters.Builder> implements
      // @@protoc_insertion_point(message_implements:androidx.wear.protolayout.proto.DeviceParameters)
      DeviceParametersOrBuilder {
    private DeviceParameters() {
    }
    private int bitField0_;
    public static final int SCREEN_WIDTH_DP_FIELD_NUMBER = 1;
    private int screenWidthDp_;
    /**
     * <pre>
     * Width of the device's screen in DP.
     * </pre>
     *
     * <code>uint32 screen_width_dp = 1;</code>
     * @return The screenWidthDp.
     */
    @java.lang.Override
    public int getScreenWidthDp() {
      return screenWidthDp_;
    }
    /**
     * <pre>
     * Width of the device's screen in DP.
     * </pre>
     *
     * <code>uint32 screen_width_dp = 1;</code>
     * @param value The screenWidthDp to set.
     */
    private void setScreenWidthDp(int value) {
      
      screenWidthDp_ = value;
    }
    /**
     * <pre>
     * Width of the device's screen in DP.
     * </pre>
     *
     * <code>uint32 screen_width_dp = 1;</code>
     */
    private void clearScreenWidthDp() {

      screenWidthDp_ = 0;
    }

    public static final int SCREEN_HEIGHT_DP_FIELD_NUMBER = 2;
    private int screenHeightDp_;
    /**
     * <pre>
     * Height of the device's screen in DP.
     * </pre>
     *
     * <code>uint32 screen_height_dp = 2;</code>
     * @return The screenHeightDp.
     */
    @java.lang.Override
    public int getScreenHeightDp() {
      return screenHeightDp_;
    }
    /**
     * <pre>
     * Height of the device's screen in DP.
     * </pre>
     *
     * <code>uint32 screen_height_dp = 2;</code>
     * @param value The screenHeightDp to set.
     */
    private void setScreenHeightDp(int value) {
      
      screenHeightDp_ = value;
    }
    /**
     * <pre>
     * Height of the device's screen in DP.
     * </pre>
     *
     * <code>uint32 screen_height_dp = 2;</code>
     */
    private void clearScreenHeightDp() {

      screenHeightDp_ = 0;
    }

    public static final int SCREEN_DENSITY_FIELD_NUMBER = 3;
    private float screenDensity_;
    /**
     * <pre>
     * Density of the display. This value is the scaling factor to get from DP to
     * Pixels (px = dp * density).
     * </pre>
     *
     * <code>float screen_density = 3;</code>
     * @return The screenDensity.
     */
    @java.lang.Override
    public float getScreenDensity() {
      return screenDensity_;
    }
    /**
     * <pre>
     * Density of the display. This value is the scaling factor to get from DP to
     * Pixels (px = dp * density).
     * </pre>
     *
     * <code>float screen_density = 3;</code>
     * @param value The screenDensity to set.
     */
    private void setScreenDensity(float value) {
      
      screenDensity_ = value;
    }
    /**
     * <pre>
     * Density of the display. This value is the scaling factor to get from DP to
     * Pixels (px = dp * density).
     * </pre>
     *
     * <code>float screen_density = 3;</code>
     */
    private void clearScreenDensity() {

      screenDensity_ = 0F;
    }

    public static final int FONT_SCALE_FIELD_NUMBER = 7;
    private float fontScale_;
    /**
     * <pre>
     * Current user preference for the scaling factor for fonts displayed on the
     * display. This value is used to get from SP to DP (dp = sp * font_scale).
     * </pre>
     *
     * <code>float font_scale = 7;</code>
     * @return The fontScale.
     */
    @java.lang.Override
    public float getFontScale() {
      return fontScale_;
    }
    /**
     * <pre>
     * Current user preference for the scaling factor for fonts displayed on the
     * display. This value is used to get from SP to DP (dp = sp * font_scale).
     * </pre>
     *
     * <code>float font_scale = 7;</code>
     * @param value The fontScale to set.
     */
    private void setFontScale(float value) {
      
      fontScale_ = value;
    }
    /**
     * <pre>
     * Current user preference for the scaling factor for fonts displayed on the
     * display. This value is used to get from SP to DP (dp = sp * font_scale).
     * </pre>
     *
     * <code>float font_scale = 7;</code>
     */
    private void clearFontScale() {

      fontScale_ = 0F;
    }

    public static final int DEVICE_PLATFORM_FIELD_NUMBER = 4;
    private int devicePlatform_;
    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
     * @return The enum numeric value on the wire for devicePlatform.
     */
    @java.lang.Override
    public int getDevicePlatformValue() {
      return devicePlatform_;
    }
    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
     * @return The devicePlatform.
     */
    @java.lang.Override
    public androidx.wear.protolayout.proto.DeviceParametersProto.DevicePlatform getDevicePlatform() {
      androidx.wear.protolayout.proto.DeviceParametersProto.DevicePlatform result = androidx.wear.protolayout.proto.DeviceParametersProto.DevicePlatform.forNumber(devicePlatform_);
      return result == null ? androidx.wear.protolayout.proto.DeviceParametersProto.DevicePlatform.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
     * @param value The enum numeric value on the wire for devicePlatform to set.
     */
    private void setDevicePlatformValue(int value) {
        devicePlatform_ = value;
    }
    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
     * @param value The devicePlatform to set.
     */
    private void setDevicePlatform(androidx.wear.protolayout.proto.DeviceParametersProto.DevicePlatform value) {
      devicePlatform_ = value.getNumber();

    }
    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
     */
    private void clearDevicePlatform() {

      devicePlatform_ = 0;
    }

    public static final int SCREEN_SHAPE_FIELD_NUMBER = 5;
    private int screenShape_;
    /**
     * <pre>
     * The shape of the device's screen
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
     * @return The enum numeric value on the wire for screenShape.
     */
    @java.lang.Override
    public int getScreenShapeValue() {
      return screenShape_;
    }
    /**
     * <pre>
     * The shape of the device's screen
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
     * @return The screenShape.
     */
    @java.lang.Override
    public androidx.wear.protolayout.proto.DeviceParametersProto.ScreenShape getScreenShape() {
      androidx.wear.protolayout.proto.DeviceParametersProto.ScreenShape result = androidx.wear.protolayout.proto.DeviceParametersProto.ScreenShape.forNumber(screenShape_);
      return result == null ? androidx.wear.protolayout.proto.DeviceParametersProto.ScreenShape.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The shape of the device's screen
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
     * @param value The enum numeric value on the wire for screenShape to set.
     */
    private void setScreenShapeValue(int value) {
        screenShape_ = value;
    }
    /**
     * <pre>
     * The shape of the device's screen
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
     * @param value The screenShape to set.
     */
    private void setScreenShape(androidx.wear.protolayout.proto.DeviceParametersProto.ScreenShape value) {
      screenShape_ = value.getNumber();

    }
    /**
     * <pre>
     * The shape of the device's screen
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
     */
    private void clearScreenShape() {

      screenShape_ = 0;
    }

    public static final int RENDERER_SCHEMA_VERSION_FIELD_NUMBER = 6;
    private androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo rendererSchemaVersion_;
    /**
     * <pre>
     * The maximum schema version supported by the current renderer.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
     */
    @java.lang.Override
    public boolean hasRendererSchemaVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The maximum schema version supported by the current renderer.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
     */
    @java.lang.Override
    public androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo getRendererSchemaVersion() {
      return rendererSchemaVersion_ == null ? androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo.getDefaultInstance() : rendererSchemaVersion_;
    }
    /**
     * <pre>
     * The maximum schema version supported by the current renderer.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
     */
    private void setRendererSchemaVersion(androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo value) {
      value.getClass();
  rendererSchemaVersion_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * The maximum schema version supported by the current renderer.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRendererSchemaVersion(androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo value) {
      value.getClass();
  if (rendererSchemaVersion_ != null &&
          rendererSchemaVersion_ != androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo.getDefaultInstance()) {
        rendererSchemaVersion_ =
          androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo.newBuilder(rendererSchemaVersion_).mergeFrom(value).buildPartial();
      } else {
        rendererSchemaVersion_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The maximum schema version supported by the current renderer.
     * </pre>
     *
     * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
     */
    private void clearRendererSchemaVersion() {  rendererSchemaVersion_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int CAPABILITIES_FIELD_NUMBER = 8;
    private androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities capabilities_;
    /**
     * <pre>
     * Renderer supported capabilities
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
     */
    @java.lang.Override
    public boolean hasCapabilities() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Renderer supported capabilities
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
     */
    @java.lang.Override
    public androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities getCapabilities() {
      return capabilities_ == null ? androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities.getDefaultInstance() : capabilities_;
    }
    /**
     * <pre>
     * Renderer supported capabilities
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
     */
    private void setCapabilities(androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities value) {
      value.getClass();
  capabilities_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Renderer supported capabilities
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCapabilities(androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities value) {
      value.getClass();
  if (capabilities_ != null &&
          capabilities_ != androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities.getDefaultInstance()) {
        capabilities_ =
          androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities.newBuilder(capabilities_).mergeFrom(value).buildPartial();
      } else {
        capabilities_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Renderer supported capabilities
     * </pre>
     *
     * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
     */
    private void clearCapabilities() {  capabilities_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Parameters describing the device requesting a layout update. This contains
     * physical and logical characteristics about the device (e.g. screen size and
     * density, etc).
     * </pre>
     *
     * Protobuf type {@code androidx.wear.protolayout.proto.DeviceParameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters, Builder> implements
        // @@protoc_insertion_point(builder_implements:androidx.wear.protolayout.proto.DeviceParameters)
        androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParametersOrBuilder {
      // Construct using androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Width of the device's screen in DP.
       * </pre>
       *
       * <code>uint32 screen_width_dp = 1;</code>
       * @return The screenWidthDp.
       */
      @java.lang.Override
      public int getScreenWidthDp() {
        return instance.getScreenWidthDp();
      }
      /**
       * <pre>
       * Width of the device's screen in DP.
       * </pre>
       *
       * <code>uint32 screen_width_dp = 1;</code>
       * @param value The screenWidthDp to set.
       * @return This builder for chaining.
       */
      public Builder setScreenWidthDp(int value) {
        copyOnWrite();
        instance.setScreenWidthDp(value);
        return this;
      }
      /**
       * <pre>
       * Width of the device's screen in DP.
       * </pre>
       *
       * <code>uint32 screen_width_dp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearScreenWidthDp() {
        copyOnWrite();
        instance.clearScreenWidthDp();
        return this;
      }

      /**
       * <pre>
       * Height of the device's screen in DP.
       * </pre>
       *
       * <code>uint32 screen_height_dp = 2;</code>
       * @return The screenHeightDp.
       */
      @java.lang.Override
      public int getScreenHeightDp() {
        return instance.getScreenHeightDp();
      }
      /**
       * <pre>
       * Height of the device's screen in DP.
       * </pre>
       *
       * <code>uint32 screen_height_dp = 2;</code>
       * @param value The screenHeightDp to set.
       * @return This builder for chaining.
       */
      public Builder setScreenHeightDp(int value) {
        copyOnWrite();
        instance.setScreenHeightDp(value);
        return this;
      }
      /**
       * <pre>
       * Height of the device's screen in DP.
       * </pre>
       *
       * <code>uint32 screen_height_dp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearScreenHeightDp() {
        copyOnWrite();
        instance.clearScreenHeightDp();
        return this;
      }

      /**
       * <pre>
       * Density of the display. This value is the scaling factor to get from DP to
       * Pixels (px = dp * density).
       * </pre>
       *
       * <code>float screen_density = 3;</code>
       * @return The screenDensity.
       */
      @java.lang.Override
      public float getScreenDensity() {
        return instance.getScreenDensity();
      }
      /**
       * <pre>
       * Density of the display. This value is the scaling factor to get from DP to
       * Pixels (px = dp * density).
       * </pre>
       *
       * <code>float screen_density = 3;</code>
       * @param value The screenDensity to set.
       * @return This builder for chaining.
       */
      public Builder setScreenDensity(float value) {
        copyOnWrite();
        instance.setScreenDensity(value);
        return this;
      }
      /**
       * <pre>
       * Density of the display. This value is the scaling factor to get from DP to
       * Pixels (px = dp * density).
       * </pre>
       *
       * <code>float screen_density = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearScreenDensity() {
        copyOnWrite();
        instance.clearScreenDensity();
        return this;
      }

      /**
       * <pre>
       * Current user preference for the scaling factor for fonts displayed on the
       * display. This value is used to get from SP to DP (dp = sp * font_scale).
       * </pre>
       *
       * <code>float font_scale = 7;</code>
       * @return The fontScale.
       */
      @java.lang.Override
      public float getFontScale() {
        return instance.getFontScale();
      }
      /**
       * <pre>
       * Current user preference for the scaling factor for fonts displayed on the
       * display. This value is used to get from SP to DP (dp = sp * font_scale).
       * </pre>
       *
       * <code>float font_scale = 7;</code>
       * @param value The fontScale to set.
       * @return This builder for chaining.
       */
      public Builder setFontScale(float value) {
        copyOnWrite();
        instance.setFontScale(value);
        return this;
      }
      /**
       * <pre>
       * Current user preference for the scaling factor for fonts displayed on the
       * display. This value is used to get from SP to DP (dp = sp * font_scale).
       * </pre>
       *
       * <code>float font_scale = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFontScale() {
        copyOnWrite();
        instance.clearFontScale();
        return this;
      }

      /**
       * <pre>
       * The platform of the device.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
       * @return The enum numeric value on the wire for devicePlatform.
       */
      @java.lang.Override
      public int getDevicePlatformValue() {
        return instance.getDevicePlatformValue();
      }
      /**
       * <pre>
       * The platform of the device.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
       * @param value The devicePlatform to set.
       * @return This builder for chaining.
       */
      public Builder setDevicePlatformValue(int value) {
        copyOnWrite();
        instance.setDevicePlatformValue(value);
        return this;
      }
      /**
       * <pre>
       * The platform of the device.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
       * @return The devicePlatform.
       */
      @java.lang.Override
      public androidx.wear.protolayout.proto.DeviceParametersProto.DevicePlatform getDevicePlatform() {
        return instance.getDevicePlatform();
      }
      /**
       * <pre>
       * The platform of the device.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
       * @param value The enum numeric value on the wire for devicePlatform to set.
       * @return This builder for chaining.
       */
      public Builder setDevicePlatform(androidx.wear.protolayout.proto.DeviceParametersProto.DevicePlatform value) {
        copyOnWrite();
        instance.setDevicePlatform(value);
        return this;
      }
      /**
       * <pre>
       * The platform of the device.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.DevicePlatform device_platform = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDevicePlatform() {
        copyOnWrite();
        instance.clearDevicePlatform();
        return this;
      }

      /**
       * <pre>
       * The shape of the device's screen
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
       * @return The enum numeric value on the wire for screenShape.
       */
      @java.lang.Override
      public int getScreenShapeValue() {
        return instance.getScreenShapeValue();
      }
      /**
       * <pre>
       * The shape of the device's screen
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
       * @param value The screenShape to set.
       * @return This builder for chaining.
       */
      public Builder setScreenShapeValue(int value) {
        copyOnWrite();
        instance.setScreenShapeValue(value);
        return this;
      }
      /**
       * <pre>
       * The shape of the device's screen
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
       * @return The screenShape.
       */
      @java.lang.Override
      public androidx.wear.protolayout.proto.DeviceParametersProto.ScreenShape getScreenShape() {
        return instance.getScreenShape();
      }
      /**
       * <pre>
       * The shape of the device's screen
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
       * @param value The enum numeric value on the wire for screenShape to set.
       * @return This builder for chaining.
       */
      public Builder setScreenShape(androidx.wear.protolayout.proto.DeviceParametersProto.ScreenShape value) {
        copyOnWrite();
        instance.setScreenShape(value);
        return this;
      }
      /**
       * <pre>
       * The shape of the device's screen
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.ScreenShape screen_shape = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearScreenShape() {
        copyOnWrite();
        instance.clearScreenShape();
        return this;
      }

      /**
       * <pre>
       * The maximum schema version supported by the current renderer.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
       */
      @java.lang.Override
      public boolean hasRendererSchemaVersion() {
        return instance.hasRendererSchemaVersion();
      }
      /**
       * <pre>
       * The maximum schema version supported by the current renderer.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
       */
      @java.lang.Override
      public androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo getRendererSchemaVersion() {
        return instance.getRendererSchemaVersion();
      }
      /**
       * <pre>
       * The maximum schema version supported by the current renderer.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
       */
      public Builder setRendererSchemaVersion(androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo value) {
        copyOnWrite();
        instance.setRendererSchemaVersion(value);
        return this;
        }
      /**
       * <pre>
       * The maximum schema version supported by the current renderer.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
       */
      public Builder setRendererSchemaVersion(
          androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setRendererSchemaVersion(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The maximum schema version supported by the current renderer.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
       */
      public Builder mergeRendererSchemaVersion(androidx.wear.protolayout.expression.proto.VersionProto.VersionInfo value) {
        copyOnWrite();
        instance.mergeRendererSchemaVersion(value);
        return this;
      }
      /**
       * <pre>
       * The maximum schema version supported by the current renderer.
       * </pre>
       *
       * <code>.androidx.wear.protolayout.expression.proto.VersionInfo renderer_schema_version = 6;</code>
       */
      public Builder clearRendererSchemaVersion() {  copyOnWrite();
        instance.clearRendererSchemaVersion();
        return this;
      }

      /**
       * <pre>
       * Renderer supported capabilities
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
       */
      @java.lang.Override
      public boolean hasCapabilities() {
        return instance.hasCapabilities();
      }
      /**
       * <pre>
       * Renderer supported capabilities
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
       */
      @java.lang.Override
      public androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities getCapabilities() {
        return instance.getCapabilities();
      }
      /**
       * <pre>
       * Renderer supported capabilities
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
       */
      public Builder setCapabilities(androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities value) {
        copyOnWrite();
        instance.setCapabilities(value);
        return this;
        }
      /**
       * <pre>
       * Renderer supported capabilities
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
       */
      public Builder setCapabilities(
          androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities.Builder builderForValue) {
        copyOnWrite();
        instance.setCapabilities(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Renderer supported capabilities
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
       */
      public Builder mergeCapabilities(androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities value) {
        copyOnWrite();
        instance.mergeCapabilities(value);
        return this;
      }
      /**
       * <pre>
       * Renderer supported capabilities
       * </pre>
       *
       * <code>.androidx.wear.protolayout.proto.Capabilities capabilities = 8;</code>
       */
      public Builder clearCapabilities() {  copyOnWrite();
        instance.clearCapabilities();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:androidx.wear.protolayout.proto.DeviceParameters)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "screenWidthDp_",
              "screenHeightDp_",
              "screenDensity_",
              "devicePlatform_",
              "screenShape_",
              "rendererSchemaVersion_",
              "fontScale_",
              "capabilities_",
            };
            java.lang.String info =
                "\u0000\b\u0000\u0001\u0001\b\b\u0000\u0000\u0000\u0001\u000b\u0002\u000b\u0003\u0001" +
                "\u0004\f\u0005\f\u0006\u1009\u0000\u0007\u0001\b\u1009\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters> parser = PARSER;
          if (parser == null) {
            synchronized (androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:androidx.wear.protolayout.proto.DeviceParameters)
    private static final androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters DEFAULT_INSTANCE;
    static {
      DeviceParameters defaultInstance = new DeviceParameters();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        DeviceParameters.class, defaultInstance);
    }

    public static androidx.wear.protolayout.proto.DeviceParametersProto.DeviceParameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DeviceParameters> PARSER;

    public static com.google.protobuf.Parser<DeviceParameters> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CapabilitiesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:androidx.wear.protolayout.proto.Capabilities)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Current minimum freshness limit in milliseconds. This can change based on
     * various factors. Any freshness request lower than the current limit will be
     * replaced by that limit. A value of 0 here signifies that the minimum
     * freshness limit in unknown.
     * </pre>
     *
     * <code>uint64 minimum_freshness_limit_millis = 1;</code>
     * @return The minimumFreshnessLimitMillis.
     */
    long getMinimumFreshnessLimitMillis();
  }
  /**
   * <pre>
   * Capabilities describing the features that the renderer supports.
   * </pre>
   *
   * Protobuf type {@code androidx.wear.protolayout.proto.Capabilities}
   */
  public  static final class Capabilities extends
      com.google.protobuf.GeneratedMessageLite<
          Capabilities, Capabilities.Builder> implements
      // @@protoc_insertion_point(message_implements:androidx.wear.protolayout.proto.Capabilities)
      CapabilitiesOrBuilder {
    private Capabilities() {
    }
    public static final int MINIMUM_FRESHNESS_LIMIT_MILLIS_FIELD_NUMBER = 1;
    private long minimumFreshnessLimitMillis_;
    /**
     * <pre>
     * Current minimum freshness limit in milliseconds. This can change based on
     * various factors. Any freshness request lower than the current limit will be
     * replaced by that limit. A value of 0 here signifies that the minimum
     * freshness limit in unknown.
     * </pre>
     *
     * <code>uint64 minimum_freshness_limit_millis = 1;</code>
     * @return The minimumFreshnessLimitMillis.
     */
    @java.lang.Override
    public long getMinimumFreshnessLimitMillis() {
      return minimumFreshnessLimitMillis_;
    }
    /**
     * <pre>
     * Current minimum freshness limit in milliseconds. This can change based on
     * various factors. Any freshness request lower than the current limit will be
     * replaced by that limit. A value of 0 here signifies that the minimum
     * freshness limit in unknown.
     * </pre>
     *
     * <code>uint64 minimum_freshness_limit_millis = 1;</code>
     * @param value The minimumFreshnessLimitMillis to set.
     */
    private void setMinimumFreshnessLimitMillis(long value) {
      
      minimumFreshnessLimitMillis_ = value;
    }
    /**
     * <pre>
     * Current minimum freshness limit in milliseconds. This can change based on
     * various factors. Any freshness request lower than the current limit will be
     * replaced by that limit. A value of 0 here signifies that the minimum
     * freshness limit in unknown.
     * </pre>
     *
     * <code>uint64 minimum_freshness_limit_millis = 1;</code>
     */
    private void clearMinimumFreshnessLimitMillis() {

      minimumFreshnessLimitMillis_ = 0L;
    }

    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Capabilities describing the features that the renderer supports.
     * </pre>
     *
     * Protobuf type {@code androidx.wear.protolayout.proto.Capabilities}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities, Builder> implements
        // @@protoc_insertion_point(builder_implements:androidx.wear.protolayout.proto.Capabilities)
        androidx.wear.protolayout.proto.DeviceParametersProto.CapabilitiesOrBuilder {
      // Construct using androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Current minimum freshness limit in milliseconds. This can change based on
       * various factors. Any freshness request lower than the current limit will be
       * replaced by that limit. A value of 0 here signifies that the minimum
       * freshness limit in unknown.
       * </pre>
       *
       * <code>uint64 minimum_freshness_limit_millis = 1;</code>
       * @return The minimumFreshnessLimitMillis.
       */
      @java.lang.Override
      public long getMinimumFreshnessLimitMillis() {
        return instance.getMinimumFreshnessLimitMillis();
      }
      /**
       * <pre>
       * Current minimum freshness limit in milliseconds. This can change based on
       * various factors. Any freshness request lower than the current limit will be
       * replaced by that limit. A value of 0 here signifies that the minimum
       * freshness limit in unknown.
       * </pre>
       *
       * <code>uint64 minimum_freshness_limit_millis = 1;</code>
       * @param value The minimumFreshnessLimitMillis to set.
       * @return This builder for chaining.
       */
      public Builder setMinimumFreshnessLimitMillis(long value) {
        copyOnWrite();
        instance.setMinimumFreshnessLimitMillis(value);
        return this;
      }
      /**
       * <pre>
       * Current minimum freshness limit in milliseconds. This can change based on
       * various factors. Any freshness request lower than the current limit will be
       * replaced by that limit. A value of 0 here signifies that the minimum
       * freshness limit in unknown.
       * </pre>
       *
       * <code>uint64 minimum_freshness_limit_millis = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinimumFreshnessLimitMillis() {
        copyOnWrite();
        instance.clearMinimumFreshnessLimitMillis();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:androidx.wear.protolayout.proto.Capabilities)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "minimumFreshnessLimitMillis_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities> parser = PARSER;
          if (parser == null) {
            synchronized (androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:androidx.wear.protolayout.proto.Capabilities)
    private static final androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities DEFAULT_INSTANCE;
    static {
      Capabilities defaultInstance = new Capabilities();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Capabilities.class, defaultInstance);
    }

    public static androidx.wear.protolayout.proto.DeviceParametersProto.Capabilities getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Capabilities> PARSER;

    public static com.google.protobuf.Parser<Capabilities> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
